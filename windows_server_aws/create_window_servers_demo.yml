---
- name: Provision Windows Servers on AWS
  hosts: localhost

  tasks:
    - name: Create a VPC in AWS
      amazon.aws.ec2_vpc_net:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ region }}"
        tags:
          name: "{{ vpc_name }}"
          project: "{{ project_name }}"
      register: vpc 

    - name: Create a subnet for the VPC
      amazon.aws.ec2_vpc_subnet:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        vpc_id: "{{vpc.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone }}"
        state: present
        cidr: "{{ subnet_cidr_block }}"
        map_public: true
        tags:
          name: "{{ subnet_name }}"
          project: "{{ project_name }}"
      register: subnet_ids

    - name: Create the internet gateway for the VPC
      amazon.aws.ec2_vpc_igw:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        vpc_id: "{{vpc.vpc.id}}"
        region: "{{ region }}"
        state: present
        tags:
          name: "{{ internet_gateway_name }}"
          project: "{{ project_name }}"
      register: internet_gateway

    - name: Create a route table for the VPC
      amazon.aws.ec2_vpc_route_table:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        vpc_id: "{{vpc.vpc.id}}"
        region: "{{ region }}"
        state: present
        tags:
          name: "{{ routigTable_name }}"
          project: "{{ project_name }}"
        subnets: [ "{{ subnet_ids.subnet.id }}" ]
        routes:
          - dest: "{{ destination_cidr_block }}"
            gateway_id: "{{ internet_gateway.gateway_id }}"
      register: public_route_table

    - name: Create security group
      amazon.aws.ec2_group:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        name: "{{ security_group_name }}"
        description: "allow remote windows"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          name: "{{ security_group_name }}"
          project: "{{ project_name }}"
        rules:
          - proto: tcp
            from_port: 3389
            to_port: 3389
            cidr_ip: "{{ security_cidr_block }}"
          - proto: tcp
            from_port: 5986
            to_port: 5986
            cidr_ip: "{{ security_cidr_block }}"
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "{{ security_cidr_block }}"
      register: securityGroup

    - include_role: 
        name: roles/create_ec2_vm_instance
      vars:
        tag_environment: Dev
        server_name: 
          - server1
          - server2
      loop: "{{ server_name }}"

    - include_role: 
        name: roles/create_ec2_vm_instance
      vars:
        tag_environment: Prod
        server_name: 
          - server3
          - server4
      loop: "{{ server_name }}"
