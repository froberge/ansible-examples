---
- name: Decomission a window VM and AWS infra
  hosts: localhost

  tasks:
    - name: Get ec2 instance info for project "{{ project_name }}"
      amazon.aws.ec2_instance_info:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        filters:
          "tag:Project": "{{ project_name }}"
      register: ec2_list

    - name: Delete EC2 instance for project "{{ project_name }}"
      amazon.aws.ec2_instance: 
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        instance_ids: "{{ item.instance_id }}"
        region: "{{ region }}"
        state: "absent"
        wait: true
      with_items: "{{ ec2_list.instances }}"

    - name: Get the vpc details for project "{{ project_name }}"
      amazon.aws.ec2_vpc_net_info:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        filters:
          "tag:Project": "{{ project_name }}"
      register: all_vpcs

    - name: Delete Route Table for project "{{ project_name }}"
      amazon.aws.ec2_vpc_route_table:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
        tags:
          name: "{{ routigTable_name }}"
        state: absent

    - name: Delete internet gateway for project "{{ project_name }}"
      amazon.aws.ec2_vpc_igw:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        vpc_id: "{{ item.vpc_id }}"
        state: absent
      loop: '{{ all_vpcs.vpcs }}'

    - name: Delete Subnet for project "{{ project_name }}"
      amazon.aws.ec2_vpc_subnet:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
        cidr: "{{ subnet_cidr_block }}"
        state: absent

    - name: Gather information about all Security Groups for project "{{ project_name }}"
      amazon.aws.ec2_group_info:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        filters:
          vpc-id: "{{ all_vpcs.vpcs[0].vpc_id }}"
      register: all_sg

    - name: Delete Security Groups in VPC {{ all_vpcs.vpcs[0].vpc_id }} by ID
      amazon.aws.ec2_group:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ region }}"
        group_id: "{{ item.group_id }}"
        state: absent
      loop: "{{ all_sg.security_groups }}"
      when: item.group_name != "default"

    - name: Delete AWS VPC for project "{{ project_name }}"
      amazon.aws.ec2_vpc_net:
        access_key: "{{ AWS_ACCESS_KEY_ID }}"
        secret_key: "{{ AWS_SECRET_KEY }}"
        vpc_id: "{{ all_vpcs.vpcs[0].vpc_id}}" 
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ region }}"
        state: absent