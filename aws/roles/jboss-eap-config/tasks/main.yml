---
- name: "JBoss EAP installation and configuration"
  hosts: "{{ hosts_group_name | default('localhost') }}"
  become: yes
  vars:
    eap_install_workdir: '/opt'
    eap_version: '7.4.0'
    install_name: jboss-eap
    eap_user: "{{ install_name }}"
    eap_config_base: standalone-ha.xml
    eap_home: "{{ eap_install_workdir }}/{{ install_name }}-{{ (eap_version.split('.'))[0:2] | join('.') }}"

    instance_http_ports:
      - 8080
      - 8180
      - 8280
    app:
      name: 'info-1.1.war'
      url: 'https://drive.google.com/uc?export=download&id=1w9ss5okctnjUvRAxhPEPyC7DmbUwmbhb'
  collections:
    - redhat.eap
  roles:
    - eap_install
  tasks:

    - name: "Set up for WildFly instance {{ item }}"
      include_role:
        name: eap_systemd
      vars:
        eap_config_base: 'standalone-ha.xml'
        eap_basedir_prefix: "/opt/{{ inventory_hostname }}"
        eap_config_name: "{{ install_name }}"
        eap_instance_name: "{{ install_name }}"
        eap_instance_id: "{{ item }}"
        service_systemd_env_file: "/etc/eap-{{ item }}.conf"
        service_systemd_conf_file: "/usr/lib/systemd/system/jboss-eap-{{ item }}.service"
      loop: "{{ range(0,3) | list }}"
  post_tasks:

    - set_fact:
            instance_http_ports:
                - 8080
                - 8180
                - 8280
    - wait_for:
        port: "{{ item }}"
      loop: "{{ instance_http_ports }}"

    - name: "Checks that WildFly server is running and accessible"
      get_url:
        url: "http://localhost:{{ item }}/"
        dest: '/dev/null'
      loop: "{{ instance_http_ports }}"

# ---
# # tasks file for jboss-eap-install
# - name: Install JBoss Requirements
#   ansible.builtin.dnf:
#     name: java-1.8.0-openjdk-devel, unzip, initscripts, hostname
#     state: present

# - name: Check if service exists
#   stat: path=/etc/init.d/jboss-eap-rhel.sh
#   register: service_status

# - name: Ensure EAP service is stopped
#   when: service_status.stat.exists
#   ignore_errors: true
#   service:
#     name: jboss-eap-rhel
#     state: stopped

# - name: Create JBoss EAP Group
#   group:
#     name: "{{ jboss_eap_group }}"
#     system: yes
#     state: present
#     gid: "{{ jboss_eap_group_gid | default('400') }}"

# - name: Create JBoss EAP User
#   user:
#     name: "{{ jboss_eap_user }}"
#     comment: "JBoss EAP User"
#     uid: "{{ jboss_eap_user_uid | default('400') }}"
#     group: "{{ jboss_eap_group }}"
#     home: "{{ eap_deploy_dir }}"

# - name: Clean EAP directory
#   file:
#     state: absent
#     path: "{{ eap_home }}"

# - name: Remove EAP directories (for different versions)
#   file:
#     state: absent
#     path: "{{ eap_all }}"

# - name: "Obtains JBoss repository"
#   get_url:
#     url: "{{ eap_link }}"
#     dest: "{{ eap_deploy_dir }}"

# - name: Unarchive EAP
#   unarchive:
#     src:  "{{ eap_deploy_dir }}/{{ eap_archive }}"
#     dest: "{{ eap_deploy_dir }}"
#     owner: "{{ jboss_eap_user }}"
#     group: "{{ jboss_eap_group }}"
#     remote_src: yes

# - name: Clear JBoss Zip File
#   file:
#     state: absent
#     path: "{{ eap_deploy_dir }}/{{ eap_archive }}"

# - name: Create symlink
#   file:
#     src: "{{eap_home}}"
#     dest: "/opt/jboss-eap"
#     state: link

# - name: Modify JBoss EAP Configuration File
#   lineinfile:
#     state: present
#     path: "{{ eap_home }}/bin/init.d/jboss-eap.conf"
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#   with_items: 
#     - {regexp: "^# JBOSS_USER=", line: "JBOSS_USER=jboss-eap"}
#     - {regexp: "^# JBOSS_CONFIG=", line: "JBOSS_CONFIG=standalone-ha.xml"}
#     - {regexp: "^# JBOSS_OPTS=", line: "JBOSS_OPTS=\"-b 0.0.0.0 -bprivate `hostname -i` -Djboss.node.name={{ inventory_hostname }}\""}
#     - {regexp: "^# JBOSS_ID=", line: "JBOSS_ID=jboss"}
    
# - name: Copy JBoss Service Configuration File
#   copy:
#     src: "{{ eap_home }}/bin/init.d/jboss-eap.conf"
#     dest: "{{ jboss_eap_service_conf_dir }}/"
#     remote_src: True
#     owner: "{{ jboss_eap_user }}"
#     group: "{{ jboss_eap_group }}"
    
# - name: Copy JBoss EAP Service File
#   copy:
#     src: "{{ eap_home }}/bin/init.d/jboss-eap-rhel.sh"
#     dest: "{{ rhel_initd }}"
#     remote_src: True
#     owner: "{{ jboss_eap_user }}"
#     group: "{{ jboss_eap_group }}"
#     mode: 0755

# - name: Enable EAP service
#   service:
#     name: jboss-eap-rhel.sh
#     enabled: yes 

# - name: Start EAP service
#   service:
#     name: jboss-eap-rhel
#     state: started

# - name: Create Admin Users froberge on each application
#   command: "sh {{ eap_home }}/bin/add-user.sh froberge password"

# - name: Ensures webapp War file has been retrieved from the url
#   get_url:
#     url: "{{ app_url }}"
#     dest: "{{ eap_deploy_dir }}"

# - name: Deploy the war file on each standalone server (replace if deployed)
#   command: "sh {{ eap_home }}/bin/jboss-cli.sh -u=froberge -p=password --controller=localhost:9990 --connect --command='deploy {{ eap_deploy_dir }}/{{ app_name }} --force'"

# - name: Clear JBoss Zip File
#   file:
#     state: absent
#     dest: "{{ eap_deploy_dir }}/{{ app_name }}"