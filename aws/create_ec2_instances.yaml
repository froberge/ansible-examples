---
- name: launching an ec2 instance
  hosts: localhost

  vars:
    region: "us-east-2"

  tasks:

  - name: create a VPC in AWS
    amazon.aws.ec2_vpc_net:
      name: ansible_demo_dev
      cidr_block: 10.0.0.0/16
      region: "{{region}}"
      tags:
        name: "ansible_demo_dev_vpc"
        project: "Ansible_Demo"
    register: vpc  

  - name: create an internet gateway for the VPC
    amazon.aws.ec2_vpc_igw:
      vpc_id: "{{vpc.vpc.id}}"
      region: "{{region}}"
      state: present
      tags:
        name: "ansible_demo_dev_igw"
        project: "Ansible_Demo"
    register: internet_gateway


  - name: create a subnet in the VPC
    amazon.aws.ec2_vpc_subnet:
      vpc_id: "{{vpc.vpc.id}}"
      region: "{{region}}"
      az: "{{region}}a"
      state: present
      cidr: "10.0.1.0/24"
      tags:
        name: ansible_demo_dev_subnet
    register: subnet_ids

  - name: create a route table
    amazon.aws.ec2_vpc_route_table:
      vpc_id: "{{vpc.vpc.id}}"
      region: "{{ region }}"
      state: present
      tags:
        Name: ansible_demo_dev_route_table
      subnets: [ "{{ subnet_ids.subnet.id }}" ]
      # create routes
      routes:
        - dest: "0.0.0.0/0"
          gateway_id: "{{ internet_gateway.gateway_id }}"
    register: public_route_table

  - name: create a security group
    ec2_group:
      name: AnsibleSecurity
      description: "Ansible Security Group"
      region: "{{region}}"
      vpc_id: "{{vpc.vpc.id}}"
      tags:
        Name: ansible_demo_dev_security_group
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 3389
          to_port: 3389
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 3389
          to_port: 3389
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 5985
          to_port: 5985
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 5986
          to_port: 5986
          cidr_ip: 0.0.0.0/0
        - proto: icmp
          from_port: -1 # icmp type, -1 = any type
          to_port:  -1 # icmp subtype, -1 = any subtype
          cidr_ip: 0.0.0.0/0
    register: my_security_group

  - name: launch an ec2 instance
    amazon.aws.ec2_instance:
      instance_type: t2.micro
      region: "{{region}}"
      image: ami-0aa8fc2422063977a
      security_group: "{{my_security_group.group_id}}"
      key_name: "ansible_automation_platform"
      count: 1
      wait: yes
      wait_timeout: 500
      tags:
        Name: "demo_lb_server"
        Owner: Felix
        type: "dev_lb"
        project: "Ansible_Demo"
        provider: "AWS"
      vpc_subnet_id: "{{subnet_ids.subnets[0].id}}"
      network_interfaces:        
        - assign_public_ip: yes
    register: ec2_instance

  - name: Wait for ssh to come up
    wait_for: host={{ item.public_dns_name  }} port=22 delay=60 timeout=320 state=started
    with_items: "{{ ec2_instance.instances }}"


  - name: Add all instance public IPs to host group
    add_host: hostname={{ item.public_ip }} groups=ec2hosts
    loop: "{{ ec2_instance.instances }}"

  - name: debug values of new VM
    debug:
      msg: "{{ ec2_instance }}"

#  - name: add new instance into inventory
#    add_host: hostname={{item.public_ip}} groupname=tower
#    with_items: "{{ec2.instances}}"